/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

//#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    //chosen { zmk,matrix-transform = &five_column_transform; };

    chosen { zmk,physical-layout = &foostan_corne_5col_layout; };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 15 25 33 34 35 26 16 6 7 17 27 28 18 8 9 19 29 32 31>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1 0 10 11 20 21 22 30 32 31 24 23 13 12 2 3 4 14>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        hmlf: home_row_mod_left_fast {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <20>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 15 25 33 34 35 26 16 6 7 17 27 28 18 8 9 19 29 32 31>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmrf: home_row_mod_right_fast {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <20>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1 0 10 11 20 21 22 30 32 31 24 23 13 12 2 3 4 14>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
        };

        lt_slow: lt_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SLOW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <335>;
            flavor = "tap-preferred";
        };

        mt_slow: mt_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SLOW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <440>;
            flavor = "tap-preferred";
        };

        hml_lctl: hml_lctl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 15 25 33 34 35 26 16 6 7 17 27 28 18 8 9 19 29 23 1 3 21 32 31>;
            hold-trigger-on-release;
            label = "HML_LCTL";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
  &kp Q            &kp W            &kp F              &kp P               &kp B             &kp J        &kp L            &kp U                 &kp Y               &kp SQT
  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml_lctl LCTRL S  &hmlf LEFT_SHIFT T  &kp G             &kp M        &hmrf RSHIFT N   &hmr RCTRL E          &hmr RIGHT_ALT I    &hmr RIGHT_GUI O
  &kp Z            &kp X            &kp C              &kp D               &kp V             &kp K        &kp H            &mt_slow EQUAL COMMA  &mt_slow MINUS DOT  &mt_slow SINGLE_QUOTE FSLH
                                    &lt_slow 5 ESCAPE  &kp ENTER           &lt_slow 1 TAB    &lt 2 SPACE  &lt 3 BACKSPACE  &lt_slow 4 DEL
            >;
        };

        Nav {
            bindings = <
  &trans    &trans    &trans     &trans     &trans    &kp C_AC_BACK  &kp LC(R)  &kp LC(Z)  &kp C_AC_FORWARD  &kp LC(C_AC_REFRESH)
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT         &kp RET
  &trans    &trans    &trans     &trans     &trans    &kp HOME       &kp PG_UP  &kp PG_DN  &kp END           &kp INS
                      &trans     &trans     &trans    &trans         &trans     &trans
            >;
        };

        Num {
            bindings = <
  &kp GRAVE  &kp N7  &kp N8   &kp N9    &kp N0       &trans  &trans     &trans     &trans    &trans
  &kp APOS   &kp N4  &kp N5   &kp N6    &kp EQUAL    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp LBKT   &kp N1  &kp N2   &kp N3    &kp RBKT     &trans  &trans     &trans     &trans    &trans
                     &kp DOT  &kp BSLH  &kp MINUS    &trans  &trans     &trans
            >;
        };

        Sym {
            bindings = <
  &kp TILDE          &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR          &trans  &trans     &trans     &trans    &trans
  &kp DOUBLE_QUOTES  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS          &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
  &kp LBRC           &kp EXCL  &kp AT     &kp POUND  &kp RBRC          &trans  &trans     &trans     &trans    &trans
                               &trans     &kp PIPE   &kp UNDERSCORE    &trans  &trans     &trans
            >;
        };

        Fun {
            bindings = <
  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &kp F        &kp LEFT_BRACKET  &kp C_PLAY  &kp C_MUTE    &kp RIGHT_BRACKET
  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &key_repeat  &kp RSHFT         &kp RCTRL   &kp RALT      &kp RGUI
  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &trans       &caps_word        &trans      &kp CAPSLOCK  &trans
                   &trans  &trans  &trans             &trans       &trans            &trans
            >;
        };

        Kb {
            bindings = <
  &trans  &studio_unlock  &trans  &trans  &trans    &trans        &trans        &soft_off     &trans        &bt BT_CLR
  &trans  &trans          &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans
  &trans  &trans          &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                          &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };
};

